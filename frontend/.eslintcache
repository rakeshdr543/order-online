[{"C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\index.js":"1","C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\App.js":"2","C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\components\\Footer.js":"4","C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\components\\Header.js":"5","C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\screens\\HomeScreen.js":"6","C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\screens\\ProductScreen.js":"7","C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\components\\Product.js":"8","C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\components\\Rating.js":"9","C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\productsAndImages\\products.js":"10","C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\components\\Loader.js":"11","C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\components\\Message.js":"12","C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\components\\Paginate.js":"13","C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\components\\Meta.js":"14","C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\actions\\productActions.js":"15","C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\constants\\productConstants.js":"16","C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\store.js":"17","C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\reducers\\productReducers.js":"18","C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\reducers\\userReducers.js":"19","C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\constants\\userConstants.js":"20","C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\reducers\\cartReducers.js":"21","C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\constants\\cartConstants.js":"22","C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\screens\\CartScreen.js":"23","C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\actions\\cartActions.js":"24","C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\screens\\LoginScreen.js":"25","C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\screens\\RegisterScreen.js":"26","C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\components\\FormContainer.js":"27","C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\actions\\userActions.js":"28","C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\screens\\ShippingScreen.js":"29","C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\screens\\PaymentScreen.js":"30","C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\components\\CheckoutSteps.js":"31","C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\reducers\\orderReducers.js":"32","C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\actions\\orderActions.js":"33","C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\constants\\orderConstants.js":"34","C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\screens\\PlaceOrderScreen.js":"35","C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\screens\\ProfileScreen.js":"36","C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\components\\SearchBox.js":"37","C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\screens\\OrderScreen.js":"38"},{"size":663,"mtime":1610868661852,"results":"39","hashOfConfig":"40"},{"size":1551,"mtime":1611398770972,"results":"41","hashOfConfig":"40"},{"size":375,"mtime":1610118352945,"results":"42","hashOfConfig":"40"},{"size":382,"mtime":1610118352827,"results":"43","hashOfConfig":"40"},{"size":2664,"mtime":1611390408099,"results":"44","hashOfConfig":"40"},{"size":1626,"mtime":1610876470372,"results":"45","hashOfConfig":"40"},{"size":8030,"mtime":1611369257242,"results":"46","hashOfConfig":"40"},{"size":1013,"mtime":1610118352828,"results":"47","hashOfConfig":"40"},{"size":1633,"mtime":1610118352830,"results":"48","hashOfConfig":"40"},{"size":2568,"mtime":1610118352940,"results":"49","hashOfConfig":"40"},{"size":448,"mtime":1610844859705,"results":"50","hashOfConfig":"40"},{"size":265,"mtime":1610845141844,"results":"51","hashOfConfig":"40"},{"size":843,"mtime":1610847021460,"results":"52","hashOfConfig":"40"},{"size":527,"mtime":1610846247686,"results":"53","hashOfConfig":"40"},{"size":6841,"mtime":1611406491380,"results":"54","hashOfConfig":"40"},{"size":1524,"mtime":1611406038262,"results":"55","hashOfConfig":"40"},{"size":1885,"mtime":1611399085026,"results":"56","hashOfConfig":"40"},{"size":3918,"mtime":1611406975875,"results":"57","hashOfConfig":"40"},{"size":2212,"mtime":1611389336693,"results":"58","hashOfConfig":"40"},{"size":904,"mtime":1611344200901,"results":"59","hashOfConfig":"40"},{"size":1560,"mtime":1611378436196,"results":"60","hashOfConfig":"40"},{"size":282,"mtime":1611377118574,"results":"61","hashOfConfig":"40"},{"size":3715,"mtime":1611380480334,"results":"62","hashOfConfig":"40"},{"size":1317,"mtime":1611377406563,"results":"63","hashOfConfig":"40"},{"size":2341,"mtime":1611380960582,"results":"64","hashOfConfig":"40"},{"size":3358,"mtime":1611381217877,"results":"65","hashOfConfig":"40"},{"size":395,"mtime":1610846458328,"results":"66","hashOfConfig":"40"},{"size":4678,"mtime":1611389331661,"results":"67","hashOfConfig":"40"},{"size":2716,"mtime":1611381734743,"results":"68","hashOfConfig":"40"},{"size":1922,"mtime":1611381945998,"results":"69","hashOfConfig":"40"},{"size":1429,"mtime":1610865364028,"results":"70","hashOfConfig":"40"},{"size":3148,"mtime":1611399024093,"results":"71","hashOfConfig":"40"},{"size":5454,"mtime":1611398912636,"results":"72","hashOfConfig":"40"},{"size":1262,"mtime":1611382307688,"results":"73","hashOfConfig":"40"},{"size":5912,"mtime":1611384613510,"results":"74","hashOfConfig":"40"},{"size":5915,"mtime":1611395566135,"results":"75","hashOfConfig":"40"},{"size":843,"mtime":1610845942955,"results":"76","hashOfConfig":"40"},{"size":8990,"mtime":1611398649712,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"7l1g7f",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"80"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"80"},"C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\index.js",[],["159","160"],"C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\App.js",[],"C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\components\\Header.js",[],"C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\screens\\HomeScreen.js",["161"],"import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Col, Row } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport Meta from '../components/Meta'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\nconst HomeScreen = ({match}) => {\r\n    const keyword = match.params.keyword\r\n\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector((state)=>state.productList)\r\n    const {loading,error,products,pages,page} = productList\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword,pageNumber))\r\n        \r\n    }, [dispatch,keyword,pageNumber])\r\n\r\n    return (\r\n        <>\r\n            <Meta />\r\n            <h1>Latest Products</h1>\r\n            {loading ? (<Loader />) : error ? (<Message variant='danger'>{error}</Message>):(\r\n            <>\r\n            <Row>\r\n                {\r\n                    products.map((product) =>(\r\n                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                            <Product product={product} /> \r\n                        </Col>\r\n                    ))\r\n                }\r\n            </Row>\r\n            <Paginate\r\n            pages={pages}\r\n            page={page}\r\n            keyword= {keyword ? keyword:''}\r\n            />\r\n            </>\r\n            ) }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\screens\\ProductScreen.js",["162"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport { createProductReview, listProductDetails } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\nimport Message from '../components/Message'\r\nimport Meta from '../components/Meta'\r\nimport Loader from '../components/Loader'\r\n\r\nconst ProductScreen = ({history,match}) => {\r\n\r\n  const [qty, setQty] = useState(1)\r\n  const [rating, setRating] = useState(0)\r\n  const [comment, setComment] = useState('')\r\n\r\n    const dispatch=useDispatch()\r\n    const {id} = useParams()\r\n    const productDetails = useSelector((state) => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate)\r\n  const {\r\n    success: successProductReview,\r\n    loading: loadingProductReview,\r\n    error: errorProductReview,\r\n  } = productReviewCreate\r\n\r\n  useEffect(() => {\r\n    if (successProductReview) {\r\n      setRating(0)\r\n      setComment('')\r\n    }\r\n    if (!product._id || product._id !== id) {\r\n      dispatch(listProductDetails(id))\r\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n    }\r\n  }, [dispatch, id, successProductReview])\r\n    \r\n    const addToCartHandler =()=>{\r\n      history.push(`/cart/${id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = e =>{\r\n      e.preventDefault()\r\n      dispatch(createProductReview(id,{rating,comment}))\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Link className='btn btn-light my-3' to='/'>\r\n                Go Back\r\n            </Link>\r\n            { loading ? (<Loader />):error ? (<Message variant='danger'>{error}</Message>):(\r\n              <>\r\n                <Meta title={product.name} />\r\n                    <Row>\r\n                    <Col md={6}>\r\n                        <Image src={product.image} alt={product.name} fluid />\r\n                    </Col>\r\n                    <Col md={3}>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                  />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  Description: {product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n              <ListGroup variant='flush'>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price:</Col>\r\n                      <Col>\r\n                        <strong>${product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status:</Col>\r\n                      <Col>\r\n                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            as='select'\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      onClick={addToCartHandler}\r\n                      className='btn-block'\r\n                      type='button'\r\n                      disabled={product.countInStock === 0}\r\n                    >\r\n                      Add To Cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                  </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <h2>Reviews</h2>\r\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n              <ListGroup variant='flush'>\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} />\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n                <ListGroup.Item>\r\n                  <h2>Write a Customer Review</h2>\r\n                  {successProductReview && (\r\n                    <Message variant='success'>\r\n                      Review submitted successfully\r\n                    </Message>\r\n                  )}\r\n                  {loadingProductReview && <Loader />}\r\n                  {errorProductReview && (\r\n                    <Message variant='danger'>{errorProductReview}</Message>\r\n                  )}\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId='rating'>\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                          as='select'\r\n                          value={rating}\r\n                          onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                          <option value=''>Select...</option>\r\n                          <option value='1'>1 - Poor</option>\r\n                          <option value='2'>2 - Fair</option>\r\n                          <option value='3'>3 - Good</option>\r\n                          <option value='4'>4 - Very Good</option>\r\n                          <option value='5'>5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId='comment'>\r\n                        <Form.Label>Comment</Form.Label>\r\n                        <Form.Control\r\n                          as='textarea'\r\n                          row='3'\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button\r\n                        disabled={loadingProductReview}\r\n                        type='submit'\r\n                        variant='primary'\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message>\r\n                      Please <Link to='/login'>sign in</Link> to write a review{' '}\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n              </>\r\n            ) }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\components\\Product.js",[],"C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\productsAndImages\\products.js",[],["163","164"],"C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\components\\Message.js",[],"C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\components\\Paginate.js",[],"C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\components\\Meta.js",[],"C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\actions\\productActions.js",["165"],"C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\store.js",[],"C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\screens\\CartScreen.js",[],"C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\screens\\RegisterScreen.js",[],"C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\screens\\ShippingScreen.js",[],"C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\screens\\PaymentScreen.js",[],"C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\screens\\PlaceOrderScreen.js",[],"C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\screens\\ProfileScreen.js",[],"C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\components\\SearchBox.js",[],"C:\\Users\\Rakesh\\Advanced projects\\order-online\\frontend\\src\\screens\\OrderScreen.js",["166"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from '../actions/orderActions'\r\nimport {\r\n    ORDER_PAY_RESET,\r\n    ORDER_DELIVER_RESET,\r\n  } from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n    const orderId = match.params.id\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n  \r\n    const dispatch = useDispatch()\r\n  \r\n    const orderDetails = useSelector((state) => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n  \r\n    const orderPay = useSelector((state) => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n  \r\n    const orderDeliver = useSelector((state) => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n  \r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    if (!loading) {\r\n        //   Calculate prices\r\n        const addDecimals = (num) => {\r\n          return (Math.round(num * 100) / 100).toFixed(2)\r\n        }\r\n    \r\n        order.itemsPrice = addDecimals(\r\n          order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n        )\r\n      }\r\n      useEffect(() => {\r\n        if (!userInfo) {\r\n          history.push('/login')\r\n        }\r\n\r\n        const addPayPalScript = async () => {\r\n            const { data: clientId } = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () => {\r\n              setSdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n          }\r\n          if(!order || successPay || successDeliver || order._id !== orderId){\r\n              dispatch({type:ORDER_PAY_RESET})\r\n              dispatch({type:ORDER_DELIVER_RESET})\r\n              dispatch(getOrderDetails(orderId))\r\n          }else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n              addPayPalScript()\r\n            } else {\r\n              setSdkReady(true)\r\n            }\r\n          }\r\n        }, [dispatch, orderId, successPay, successDeliver, order])\r\n\r\n        const successPaymentHandler = (paymentResult) => {\r\n            console.log(paymentResult)\r\n            dispatch(payOrder(orderId, paymentResult))\r\n          }\r\n          \r\n          const deliverHandler = () => {\r\n            dispatch(deliverOrder(order))\r\n          }\r\n      \r\n        return loading ? (\r\n            <Loader />\r\n          ) : error ? (\r\n            <Message variant='danger'>{error}</Message>\r\n          ) : (\r\n            <>\r\n              <h1>Order {order._id}</h1>\r\n              <Row>\r\n                <Col md={8}>\r\n                  <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                      <h2>Shipping</h2>\r\n                      <p>\r\n                        <strong>Name: </strong> {order.user.name}\r\n                      </p>\r\n                      <p>\r\n                        <strong>Email: </strong>{' '}\r\n                        <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n                      </p>\r\n                      <p>\r\n                        <strong>Address:</strong>\r\n                        {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                        {order.shippingAddress.postalCode},{' '}\r\n                        {order.shippingAddress.country}\r\n                      </p>\r\n                      {order.isDelivered ? (\r\n                        <Message variant='success'>\r\n                          Delivered on {order.deliveredAt}\r\n                        </Message>\r\n                      ) : (\r\n                        <Message variant='danger'>Not Delivered</Message>\r\n                      )}\r\n                    </ListGroup.Item>\r\n        \r\n                    <ListGroup.Item>\r\n                      <h2>Payment Method</h2>\r\n                      <p>\r\n                        <strong>Method: </strong>\r\n                        {order.paymentMethod}\r\n                      </p>\r\n                      {order.isPaid ? (\r\n                        <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                      ) : (\r\n                        <Message variant='danger'>Not Paid</Message>\r\n                      )}\r\n                    </ListGroup.Item>\r\n        \r\n                    <ListGroup.Item>\r\n                      <h2>Order Items</h2>\r\n                      {order.orderItems.length === 0 ? (\r\n                        <Message>Order is empty</Message>\r\n                      ) : (\r\n                        <ListGroup variant='flush'>\r\n                          {order.orderItems.map((item, index) => (\r\n                            <ListGroup.Item key={index}>\r\n                              <Row>\r\n                                <Col md={1}>\r\n                                  <Image\r\n                                    src={item.image}\r\n                                    alt={item.name}\r\n                                    fluid\r\n                                    rounded\r\n                                  />\r\n                                </Col>\r\n                                <Col>\r\n                                  <Link to={`/product/${item.product}`}>\r\n                                    {item.name}\r\n                                  </Link>\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                  {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                </Col>\r\n                              </Row>\r\n                            </ListGroup.Item>\r\n                          ))}\r\n                        </ListGroup>\r\n                      )}\r\n                    </ListGroup.Item>\r\n                  </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <Card>\r\n                    <ListGroup variant='flush'>\r\n                      <ListGroup.Item>\r\n                        <h2>Order Summary</h2>\r\n                      </ListGroup.Item>\r\n                      <ListGroup.Item>\r\n                        <Row>\r\n                          <Col>Items</Col>\r\n                          <Col>${order.itemsPrice}</Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                      <ListGroup.Item>\r\n                        <Row>\r\n                          <Col>Shipping</Col>\r\n                          <Col>${order.shippingPrice}</Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                      <ListGroup.Item>\r\n                        <Row>\r\n                          <Col>Tax</Col>\r\n                          <Col>${order.taxPrice}</Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                      <ListGroup.Item>\r\n                        <Row>\r\n                          <Col>Total</Col>\r\n                          <Col>${order.totalPrice}</Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                      {!order.isPaid && (\r\n                        <ListGroup.Item>\r\n                          {loadingPay && <Loader />}\r\n                          {!sdkReady ? (\r\n                            <Loader />\r\n                          ) : (\r\n                            <PayPalButton\r\n                              amount={order.totalPrice}\r\n                              onSuccess={successPaymentHandler}\r\n                            />\r\n                          )}\r\n                        </ListGroup.Item>\r\n                      )}\r\n                      {loadingDeliver && <Loader />}\r\n                      {userInfo &&\r\n                        userInfo.isAdmin &&\r\n                        order.isPaid &&\r\n                        !order.isDelivered && (\r\n                          <ListGroup.Item>\r\n                            <Button\r\n                              type='button'\r\n                              className='btn btn-block'\r\n                              onClick={deliverHandler}\r\n                            >\r\n                              Mark As Delivered\r\n                            </Button>\r\n                          </ListGroup.Item>\r\n                        )}\r\n                    </ListGroup>\r\n                  </Card>\r\n                </Col>\r\n              </Row>\r\n            </>\r\n          )\r\n}\r\n\r\nexport default OrderScreen\r\n",{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":2,"column":10,"nodeType":"173","messageId":"174","endLine":2,"endColumn":14},{"ruleId":"175","severity":1,"message":"176","line":42,"column":6,"nodeType":"177","endLine":42,"endColumn":42,"suggestions":"178"},{"ruleId":"167","replacedBy":"179"},{"ruleId":"169","replacedBy":"180"},{"ruleId":"171","severity":1,"message":"181","line":1,"column":135,"nodeType":"173","messageId":"174","endLine":1,"endColumn":162},{"ruleId":"175","severity":1,"message":"182","line":75,"column":12,"nodeType":"177","endLine":75,"endColumn":66,"suggestions":"183"},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'product._id'. Either include it or remove the dependency array.","ArrayExpression",["186"],["184"],["185"],"'PRODUCT_CREATE_REVIEW_RESET' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["187"],"no-global-assign","no-unsafe-negation",{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},"Update the dependencies array to be: [dispatch, id, product._id, successProductReview]",{"range":"192","text":"193"},"Update the dependencies array to be: [dispatch, orderId, successPay, successDeliver, order, userInfo, history]",{"range":"194","text":"195"},[1528,1564],"[dispatch, id, product._id, successProductReview]",[2610,2664],"[dispatch, orderId, successPay, successDeliver, order, userInfo, history]"]